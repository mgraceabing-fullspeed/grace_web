# This is a basic workflow to help you get started with Actions

name: "PHP CodeSniffer"


# Controls when the action will run. 
# on: [ push, pull_request ]

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths:
      - "**.php"
      - "aas-coding-ruleset.xml"
      - ".github/workflows/phpcs.yml"
  pull_request:
    paths:
      - "**.php"
      - "aas-coding-ruleset.xml"
      - ".github/workflows/phpcs.yml"

# on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  # pull_request:
  #  paths:
  #    - "**.php"
  #    - "aas-coding-ruleset.xml"
  #    - ".github/workflows/phpcs.yml"


# on:
#  push:
#    branches: [ develop ]
#  pull_request:
#    branches: [ develop ]

# on: [ push, pull_request ]
# on: [pull_request]
# on: pull_request
# on:
#     pull_request:
#       paths:
#         - "**.php"
#         - "phpcs.xml"
#         - ".github/workflows/phpcs.yml"

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  getChangedfiles:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      allUnfiltered: ${{ steps.changedFiles.outputs.allUnfiltered }}
      phpUnfiltered: ${{ steps.changedFiles.outputs.phpUnfiltered }}
      allFilteredACMRT: ${{ steps.changedFiles.outputs.allFilteredACMRT }}
      phpFilteredACMRT: ${{ steps.changedFiles.outputs.phpFilteredACMRT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files excluding deleted files
        id: changedFiles
        run: |
          echo "::set-output name=allUnfiltered::$(git diff-tree --no-commit-id --name-status -r ${{ github.sha }})"
          echo "::set-output name=phpUnfiltered::$(git diff-tree --no-commit-id --name-status -r ${{ github.sha }} | grep .php$)"
          echo "::set-output name=allFilteredACMRT::$(git diff-tree --no-commit-id --name-only -r --diff-filter=ACMRT ${{ github.sha }} | xargs)"
          echo "::set-output name=phpFilteredACMRT::$(git diff-tree --no-commit-id --name-only -r --diff-filter=ACMRT ${{ github.sha }} | grep .php$ | xargs)"



     # - name: echo output all
     #   run: |
     #     echo ${{ steps.changedFiles.outputs.all }}

     # - name: echo output php
     #   run: |
     #     echo ${{ steps.changedFiles.outputs.php }}

     # - name: Get list of all the modified files
     #   if: ${{ steps.changedFiles.outputs.all }}
     #   run: git diff-tree --no-commit-id --name-status -r ${{ github.sha }}

     # - name: Get list of all the modified php files
     #   if: ${{ steps.changedFiles.outputs.php }}
     #   run: git diff-tree --no-commit-id --name-status -r ${{ github.sha }} | grep .php$

     # - name: here run checking php
     #   if: ${{ steps.changedFiles.outputs.php }}
     #   run: |
     #     echo ${{ steps.changedFiles.outputs.php }}

  print-all-changed-files:
    runs-on: ubuntu-latest

    # require the first job to have ran
    needs: getChangedfiles

    # only run there are changed files
    if: ${{needs.getChangedfiles.outputs.allUnfiltered}}
    steps:
      - name: Get list of all the modified files
        run: echo ${{needs.getChangedfiles.outputs.allUnfiltered}}

      - name: Get list of all the modified files excluding deleted files
        run: echo ${{needs.getChangedfiles.outputs.allFilteredACMRT}}

  print-changed-php-files:
    runs-on: ubuntu-latest

    # require the first job to have ran
    needs: getChangedfiles

    # only run there are changed files
    if: ${{needs.getChangedfiles.outputs.phpUnfiltered}}
    steps:
      - name: Get list of all the modified php files
        run: echo ${{needs.getChangedfiles.outputs.phpUnfiltered}}

      - name: Get list of all the modified php files excluding deleted files
        run: echo ${{needs.getChangedfiles.outputs.phpFilteredACMRT}}

